ON HOME PAGE I PLACED this component.
here i used create record syntax shortcut mainly for fields attribute)and loading record(specially using getfieldvalue method)


<template>
    <lightning-card title="Account Creation">
        <lightning-layout multiple-rows>
            <lightning-layout-item size="12" padding="around-medium">
                <lightning-input label="Name" name="NAME" onchange={changehandler}></lightning-input>
            </lightning-layout-item>
            <lightning-layout-item size="12" padding="around-medium">
                <lightning-input label="Site" name="EM" onchange={changehandler}></lightning-input>
            </lightning-layout-item>
            <lightning-layout-item size="12" padding="around-medium">
                <lightning-input label="Phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" name="PH"
                    onchange={changehandler}></lightning-input>
            </lightning-layout-item>
            <lightning-layout-item size="12" padding="around-medium">
                <lightning-button label="Save" variant="brand" onclick={handleclick}></lightning-button>
            </lightning-layout-item>
        </lightning-layout>
    </lightning-card>
    <lightning-card title="View an Account">
        <lightning-layout multiple-rows>
          <lightning-layout-item size="12" padding="around-medium">
            <p><lightning-formatted-text value={retrivedname}></lightning-formatted-text></p>
            <p><lightning-formatted-text value={retrivedemail}></lightning-formatted-text></p> 
            <p><lightning-formatted-phone value={retrivedphone}></lightning-formatted-phone></p> 
          </lightning-layout-item>
        </lightning-layout>
    </lightning-card>
</template>


import { createRecord, getRecord, getFieldValue,getFieldDisplayValue, updateRecord } from 'lightning/uiRecordApi';
import {
    LightningElement,wire
} from 'lwc';
import ACCOUNTOBJ from '@salesforce/schema/Account';
import ACCOUNT_NAME from '@salesforce/schema/Account.Name';
import ACCOUNT_SITE from '@salesforce/schema/Account.Site';
import ACCOUNT_PHONE from '@salesforce/schema/Account.Phone';
export default class ChaituCreateRecord extends LightningElement {

    namejs;
    emailjs;
    phonejs;
    recordId;
    retrivedname;
    retrivedphone;
    retrivedemail;
    @wire(getRecord, {recordId:'$recordId',fields:[ACCOUNT_NAME,ACCOUNT_SITE,ACCOUNT_PHONE]})
    retrivedaccount({ data, error }){
        if(data){
            this.retrivedname = getFieldValue(data,ACCOUNT_NAME);
            this.retrivedemail = getFieldValue(data,ACCOUNT_SITE);
            this.retrivedphone = getFieldValue(data,ACCOUNT_PHONE);
        }else if(error){
            console.log('error messaage is',error.body.message);
        }
    }
    changehandler(event) {
        if (event.target.name === 'NAME') {
            this.namejs = event.target.value;
        }
        if (event.target.name === 'EM') {
            this.emailjs = event.target.value;
        }
        if (event.target.name === 'PH') {
            this.phonejs = event.target.value;
        }
    }

    handleclick(){
        const fields = {[ACCOUNT_NAME.fieldApiName]:this.namejs,[ACCOUNT_SITE.fieldApiName]:this.emailjs,[ACCOUNT_PHONE.fieldApiName]:this.phonejs};
        const recordInput = {apiname :ACCOUNTOBJ.objectApiName,fields};
      createRecord(recordInput)
      .then(
          response =>{
              console.log('response is',response);
              console.log('response in JSON',JSON.stringify(response));
              console.log('record id is',response.id);
              this.recordId = response.id;
          }).catch(error=>{
              console.log('error message is',error.body.message);
          })
    }
}
