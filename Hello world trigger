
1)in this trigger trigger.new is standard variable which fetch and stores the record vaulues 
without need of passing parameters and assign it to a variable. 
2)Once the records are automatically stored in trigger.new i am going to each record by using for loop.
3)Trigger.new contains all the records lets assue 2 records are getting updated, then 'sObjectLead' variable
contains only one record at perticular instance.
4)system.debug('vaule stored in sObjectLead first name before update is  '+ sObjectLead.FirstName);
output is the value which was stored already in firstname field='chaitu'. 
5)system.debug('vaule stored in sObjectLead first name after update is  '+ sObjectLead.FirstName);
output is value we are assigning through code firstname='Hello'
6)One more thing when we try to update the trigger.old version it throws an error msg 'record is readonly' so
to update a record that should be a trigger.new


trigger Lead_Trigger on Lead (before update) {
    
   //At this stage at this perticular place trigger.new contains values tempararly stored but not yet committed to data base.
   these values are just right before you want to perform update operation. 
   system.debug('trigger.new values are '+trigger.new);
   //trigger.old values are always fixed in entire code since those are old verstion of the record 
    which was already committed to databse before new verstion committed to data base.
    system.debug('trigger.old values are '+trigger.old);
    for(lead sObjectLead : Trigger.new){
        system.debug('vaule stored in sObjectLead is  '+ sObjectLead);
        system.debug('vaule stored in sObjectLead first name before update is  '+ sObjectLead.FirstName);
        sObjectLead.FirstName ='Hello';
        sObjectLead.LastName  ='World';
        system.debug('vaule stored in sObjectLead first name after update is  '+ sObjectLead.FirstName);
        system.debug('trigger.new values are '+trigger.new);
        system.debug('trigger.old values are '+trigger.old);
    }
    ////At this stage at this perticular place trigger.new contains values just committed to data base.
    system.debug('trigger.new values are '+trigger.new);
    system.debug('trigger.old values are '+trigger.old);
}
