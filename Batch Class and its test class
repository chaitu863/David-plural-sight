Excute Ananomoymus window:
LeadProcessor lp = new LeadProcessor();
database.executeBatch(lp); OR database.executeBatch(new LeadProcessor());

Batch class: 

public class LeadProcessor implements Database.Batchable<sObject>, Database.stateful {

    public integer recordcount = 0;
    public database.QueryLocator start(database.BatchableContext bc) {
        return Database.getQueryLocator([select id,name from lead]);
    }
    
    public void execute(database.BatchableContext bc, list<lead> leadlist){
        for(lead sobjectlead : leadlist) {
            sobjectlead.LeadSource = 'Other';
        }
        update leadlist;
        recordcount +=  leadlist.size();       
    }
    
    public void finish(database.BatchableContext bc){
        system.debug('Done chaitu');
        system.debug('total records count is '+recordcount);
    }
    
}

Test class:

@isTest
public class LeadProcessorTest {
    
    public static testmethod void metohdone(){
        list<lead> leadlist = new list<lead>();
        for(integer i = 0;i<200;i++){
            leadlist.add(new lead(lastname='lastlead'+i,Company='com'+i,leadsource='Web'));
        }
        insert leadlist;
        system.debug('leadlist in test is '+leadlist);
        test.startTest();
        LeadProcessor lp = new LeadProcessor();
        database.executeBatch(lp,200);
        test.stopTest();
        
        //check assertions
        list<lead>countleads = new list<lead>();
        for(lead slead: [select id,leadsource from lead]){
            system.assertEquals('Other', slead.leadsource,'ERROR:error came');
            countleads.add(slead);
        }
        system.assertEquals(200, countleads.size(),'Count error');
    }

}
