Example One:

PARENT:

<template>
    <ul >
        <template for:each={roominfoparent} for:item="room">
            <li key={room}>
                <c-attribute-slot-commu-child roominfochild={room}>
                    <h1 slot="slotone">
                        this is slot one info
                    </h1>
                    <h1>this is not slot info</h1>
                </c-attribute-slot-commu-child>
            </li>
        </template>
    </ul>
</template>


import { LightningElement } from 'lwc';
export default class AttributeSlotCommParent extends LightningElement {

    roominfoparent = [
        {roomNumber: 'B-101',
        roomate : 'Poori',
        countpeople : '2'},
        {roomNumber: 'C-101',
        roomate : 'Meghana',
        countpeople : '3'}
    ];
}

CHILD:

<template>
    <lightning-card title="Attribute Way">
        <lightning-layout multiple-rows>
         <lightning-layout-item size="12">
            <div class="slds-p-around_medium lgc-bg">
                <lightning-tile label={roominfochild.roomNumber} href="/path/to/somewhere">
                    <p>{roominfochild.roomate}</p>
                    <p>{roominfochild.countpeople}</p>
                </lightning-tile>
            </div>
         </lightning-layout-item>
         <lightning-layout-item>
             <slot name="slotone"></slot>
             <slot></slot>
         </lightning-layout-item>
        </lightning-layout>
    </lightning-card>
</template>

import { LightningElement, api } from 'lwc';

export default class AttributeSlotCommuChild extends LightningElement {
    @api roominfochild;
}


Example 2:

<template>
    <lightning-card title="Parent Component">
    <c-troop-slot-child >
        <p slot="nameone">My name is chaitanya</p>
        <p slot="footer">Footer text</p>
    </c-troop-slot-child>
    </lightning-card>
    <lightning-card title="Parent Component">
        <c-troop-slot-child >
            <p slot="nameone">My name is chaitanya</p>
        </c-troop-slot-child>
        </lightning-card>
</template>


<template>
    <lightning-card>
        <div>Whats your name</div>
        <p><slot name='nameone'></slot></p>
        <footer class="slds-card__footer slds-hide">
            <slot name="footer" onslotchange={handleFooterChange}></slot>
        </footer>
      
    </lightning-card>
</template>

import { LightningElement } from 'lwc';

export default class SlotChildDemo extends LightningElement {
    handleFooterChange(){
        const footerElem = this.template.querySelector('.slds-card__footer')
        if(footerElem){
            footerElem.classList.remove('slds-hide')
        }
    }
}
