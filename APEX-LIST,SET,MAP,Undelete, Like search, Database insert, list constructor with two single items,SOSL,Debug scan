Salesforce Object Query Language (SOQL): SOQL in salesforce (YOUTUBE)


string deletestring = 'TST'+'%';
list<Home_Page_Component__c> homepagelst = [SELECT ID,name,Label__c from Home_Page_Component__c
                                           WHERE Label__c LIKE :deletestring ALL ROWS];
system.debug('before for loop'+homepagelst.size());
undelete homepagelst;



Home_Page_Component__c hpc = new Home_Page_Component__c(Label__c='Parent one');
insert hpc;

Single Record:
account acc = new account(name='Hi sara');
insert acc;

single record with SObject:
sobject s = new account(name='hi sara2');
insert s;



Multiple Records on List:
Ex1: 
// creating one single account(sObject)
account acc = new account();
acc.name = 'demo1';
acc.AccountNumber = '100x1';
insert acc;

// creating one single account(sObject) in another way
account acc2 = new account(name='demo2',AccountNumber='100x2');
insert acc2;

// creating list of accounts at a time by constructor into list variable
list<account>mulacc = new list<account>{new account(name='demo3',AccountNumber='x003'),new account(name='demo4',AccountNumber='x004')};
insert mulacc;

// creating list of accounts at a time by using for loop
list<account>foracc = new list<account>();
for(account acc:[select id,name,phone from account limit 2]){
    system.debug('acc is'+acc);
    foracc.add(acc);
}
system.debug('foracc list is '+foracc);

list<string> strphone = new list<string>();
for(account acc : [select id,name,phone from account limit 2]){
    system.debug('account is'+acc);
    strphone.add(acc.phone);
}
system.debug('strphone is'+strphone);
// adding account one by one to update to list of account variable
list<account> updatelist = new list<account>();
for(account acc: [select id,name from account limit 3]){
    system.debug('single acc is'+acc);
    acc.phone='(816)908-6506';
    updatelist.add(acc);
}
update updatelist;

Ex2 : list<Home_Page_Component_Child__c> hmpchildlst = new list<Home_Page_Component_Child__c>{
    new Home_Page_Component_Child__c(Home_Page_Component__c= hpc.id,Description__c = 'descption of one three'),
    new Home_Page_Component_Child__c(Home_Page_Component__c= hpc.id,Description__c = 'descption of one four')};
Home_Page_Component_Child__c hione = new Home_Page_Component_Child__c();
hione.Home_Page_Component__c = hpc.id;
hione.Description__c = 'descption of one one';
hione.Is_It_Completed__c= true;
hmpchildlst.add(hione);

Home_Page_Component_Child__c hione2 = new Home_Page_Component_Child__c();
//hione2.Home_Page_Component__c = hpc.id;
hione2.Description__c = 'descption of one two';
hione2.Is_It_Completed__c= false;
hmpchildlst.add(hione2);

database.saveResult[] results=database.insert(hmpchildlst,false);
system.debug('resutls are '+results);

for(database.saveResult re : results){
    if(re.isSuccess()){
        system.debug('record id is '+re.getId());
    }else
        for(Database.Error er: re.getErrors()){
            system.debug('the following eror has occured ');
            system.debug('the status code '+er.getStatusCode()+'eror message is'+er.getMessage());
            system.debug('the field of problem'+er.getFields());
        }
}


SOSL:
list<list<sObject>> soslresult = [FIND 'TST*' IN ALL FIELDS RETURNING Home_Page_Component__c(ID,Label__c)];
system.debug('sosl resutls are '+soslresult);

DEBUGS SCAN

list<Home_Page_Component__c> soqlresultall = [SELECT ID,Label__c FROM Home_Page_Component__c limit 1];
try{
    Home_Page_Component__c singlesoql=soqlresultall[0];
     system.debug('single record here is '+singlesoql);//|DEBUG|single record here is Home_Page_Component__c:{Id=a044W00000lHJQRQA4, Label__c=TST1}
}catch(exception e){
    system.debug('exceptio is here '+e);
}

map<Id,Home_Page_Component__c> maphompepage = new map<Id,Home_Page_Component__c>([SELECT ID,Label__c FROM Home_Page_Component__c limit 1]);
system.debug('map results only one '+maphompepage);//|DEBUG|map results are {a044W00000lHJQRQA4=Home_Page_Component__c:{Id=a044W00000lHJQRQA4, Label__c=TST1}}

list<Home_Page_Component__c> soqlresult = [SELECT ID,Label__c FROM Home_Page_Component__c];
system.debug('soql result is '+soqlresult);//|DEBUG|soql result is (Home_Page_Component__c:{Id=a044W00000lHJQRQA4, Label__c=TST1}, Home_Page_Component__c:{Id=a044W00000lHJQSQA4, Label__c=TST2}, Home_Page_Component__c:{Id=a044W00000lHw0rQAC, Label__c=Parent one}, Home_Page_Component__c:{Id=a044W00000iBQcaQAG, Label__c=TST3}, Home_Page_Component__c:{Id=a044W00000iBQZeQAO, Label__c=TST4})

map<Id,Home_Page_Component__c> maphompepage2 = new map<Id,Home_Page_Component__c>([SELECT ID,Label__c FROM Home_Page_Component__c limit 2]);
system.debug('map results more than one '+maphompepage2);//{a044W00000lHJQRQA4=Home_Page_Component__c:{Id=a044W00000lHJQRQA4, Label__c=TST1}, a044W00000lHJQSQA4=Home_Page_Component__c:{Id=a044W00000lHJQSQA4, Label__c=TST2}}

list<list<sObject>> soslresult = [FIND 'Tst*' IN ALL FIELDS RETURNING Home_Page_Component__c(ID,Label__c),
                                  Home_Page_Component_Child__c(Id,Description__c)];
system.debug('sosl resutls are '+soslresult);
/*DEBUG|sosl resutls are ((Home_Page_Component__c:{Id=a044W00000iBQZeQAO, Label__c=TST4}, 
                         Home_Page_Component__c:{Id=a044W00000lHJQSQA4, Label__c=TST2}, 
						 Home_Page_Component__c:{Id=a044W00000lHJQRQA4, Label__c=TST1}, 
						 Home_Page_Component__c:{Id=a044W00000iBQcaQAG, Label__c=TST3}),
                        (Home_Page_Component_Child__c:{Id=a054W00000ik6xUQAQ, Description__c=descption of one one TST})
                        ) */
list<Home_Page_Component__c> onlyparent=(list<Home_Page_Component__c>)soslresult[0];
system.debug('only parent is'+onlyparent);
list<Home_Page_Component_Child__c> onlychild =(list<Home_Page_Component_Child__c>)soslresult[1];
system.debug('only child is'+onlychild);



// child to parent
list<contact> con = [SELECT ID,firstname,accountid,lastname,Account.Name,account.phone from contact limit 2];
system.debug('contact firsname name '+con[0].account.name);
for(contact cont: con){
    system.debug('contact account name '+cont.account.name);
    system.debug('contact firsname name '+cont.firstname);
}

// parent to child
list<account> acc = [SELECT ID,name,(SELECT ID,Firstname,Lastname from Contacts) from account limit 2];
for(account ac: acc){
    system.debug('account name '+ac.id);
    for(contact c:ac.contacts){
         system.debug('account contact name '+c.lastname);
    }
}


CONVERT MAP TO LIST AND SET EASYLY:

map<id,account> accMap = new map<id,account>([SELECT id,name FROM account limit 3]);
system.debug('accMap is '+accMap);



list<account> idLsttoSort = new list<account>(accMap.values());
system.debug('idLsttoSort is '+idLsttoSort);

set<id> setofIds = new set<id>();
for(ID acc : accMap.keyset()){
    setofIds.add(acc);
}
system.debug('set of ids are '+setofIds);
