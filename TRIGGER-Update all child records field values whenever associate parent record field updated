EX 1:trigger accDesupdate on Account (after insert, after update) {

    if(trigger.isupdate || trigger.isafter) {
        system.debug('inside after trigger chaitu');
        set<id> accupdateId = new set<id>();
        for(account acc : trigger.new){
            if(trigger.oldmap.get(acc.id).description != trigger.newmap.get(acc.id).description){
                accupdateId.add(acc.Id);
                system.debug('account id is'+accupdateId);
            }
    }
        list<contact> conupdate = new list<contact>();
        for(contact con : [SELECT id,Account.description from contact where AccountId IN :accupdateId]) {
            system.debug('acc desc is '+con.Account.Description);
            con.Description = con.Account.Description;
            system.debug('con desc is '+con.Description);
            conupdate.add(con);
        }
        update conupdate;
        system.debug('after con update is '+conupdate);
   }
}

EX 2: but not as effective as EX 1
trigger Account_Trigger on Account (after insert,after update) {
   public static boolean recursive = false;
    if(!recursive){
        recursive = true;
        set<id>accid = new set<id>();
        map<id,account> mapofacc = new map<id,account>();
        for(account acc:trigger.new){
            accid.add(acc.id);
            mapofacc.put(acc.id, acc);
        }
        list<contact> listofcontact = new list<contact>();
        for(contact con: [select id,name,accountid from contact where accountid in:accid]){
            if(mapofacc.get(con.accountid) !=null){
                con.Description = mapofacc.get(con.accountid).Description;
                system.debug('update contact is '+con.Description);
                listofcontact.add(con);
            }
        }
        update listofcontact;
     }
}



EX : but not effective as EX2
public static void method2(list<account> acclist){
       
         list<contact> conList = [SELECT Id, AccountId
                                    FROM contact
                                    WHERE AccountId =:acclist];
        system.debug('contacts list associated to account '+conList);

        system.debug('acclist before for loop '+acclist);
        list<contact> updateConactsList = new list<contact>();
        if(!conList.isEmpty()) {
            for(account acc: acclist) {
                for(contact con : conList) {
                    system.debug('accout billing address is '+acc.BillingCity);
                    system.debug('accout id '+acc.id);
                    system.debug('contact accoutid '+con.AccountId);
                    if((acc.id==con.AccountId) && acc.BillingCity!=null){
                        con.MailingCity       =acc.BillingCity;
                        con.MailingCountry    =acc.BillingCountry;
                        con.MailingState      =acc.BillingState;
                        con.MailingStreet     =acc.BillingStreet;
                        con.MailingPostalCode =acc.BillingPostalCode;
                        updateConactsList.add(con);
                    }
                }
            }
        system.debug('updatecontactlist values are '+updateConactsList);
        update updateConactsList; 
        }
        
    }
